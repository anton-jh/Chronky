name: Publish and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application for Windows
        run: dotnet publish -c Release -r win-x64 --self-contained -o ./publish/windows

      - name: Build application for Linux
        run: dotnet publish -c Release -r linux-x64 --self-contained -o ./publish/linux

      - name: Build application for macOS
        run: dotnet publish -c Release -r osx-x64 --self-contained -o ./publish/macos

      - name: Add installers to Windows release
        run: cp ./installers/win64.ps1 ./publish/windows

      - name: Add installers to Linux release
        run: cp ./installers/linux64.sh ./publish/linux

      - name: Add installers to macOS release
        run: cp ./installers/macos64.sh ./publish/macos

      - name: Determine if release is pre-release
        id: prerelease_check
        run: |
          if [[ "${GITHUB_REF_NAME}" =~ ^v0 ]]; then
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "prerelease=false" >> $GITHUB_ENV
          fi

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ env.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/windows
          asset_name: app-windows.zip
          asset_content_type: application/zip

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/linux
          asset_name: app-linux.zip
          asset_content_type: application/zip

      - name: Upload macOS binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/macos
          asset_name: app-macos.zip
          asset_content_type: application/zip
